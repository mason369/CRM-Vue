on:
  push:
    branches:
      - main

name: Release

jobs:
  release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate release notes
        id: gen_release_notes
        uses: github-release-notes/github-release-notes-action@master
        with:
          tag: ${{github.ref}}
          required_labels: 'release'
          output_file: RELEASE_NOTES.md
          sections: |
            changelog:
              include-body: true 
          # 启用正文内容
              path: CHANGELOG.md # 指定 changelog 文件名为 CHANGELOG.md
              sections:
                - type: feat
                  section: Features # 将 [feat] 类型的提交放入名为 "Features" 的 section 中
                - type: fix
                  section: Bug Fixes # 将 [fix] 类型的提交放入名为 "Bug Fixes" 的 section 中
                - type: docs
                  section: Documentation # 将 [docs] 类型的提交放入名为 "Documentation" 的 section 中
                - type: style
                  section: Style Changes # 将 [style] 类型的提交放入名为 "Style Changes" 的 section 中
                - type: refactor
                  section: Refactors # 将 [refactor] 类型的提交放入名为 "Refactors" 的 section 中
                - type: perf
                  section: Performance Improvements # 将 [perf] 类型的提交放入名为 "Performance Improvements" 的 section 中
                - type: test
                  section: Tests # 将 [test] 类型的提交放入名为 "Tests" 的 section 中
                - type: build
                  hidden: true # 不将 [build] 类型的提交显示在 changelog 页面上，但会在 release 页面中显示
                - type: ci
                  hidden: true # 不将 [ci] 类型的提交显示在 changelog 页面上，但会在 release 页面中显示

      - name: Create Release on GitHub
        uses: ncipollo/release-action@v1.7.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          artifacts_regex_exclude_list : 'RELEASE_NOTES\.md' # 排除 RELEASE_NOTES.md 文件
          prerelease_name_append_hash : true     # 可选项，默认值为 false。如果设置为 true，则会在任何预发布版本后附加短哈希。